# sensors =  {"living room": 21, "kitchen": 23, "bedroom": 20, "pantry": 22} #LA VARIABLE SERIA SENSORS, LA PALABRA ES LA "CLAVE" Y LA SALIDA ES EL NUMERO DE SENSORES QUE TIENE CADA CLAVE (LUGAR)
# num_cameras = {"backyard": 6,  "garage": 2, "driveway": 1} #EN ESTA PARTE LA CLAVE ES CADA PALABRA Y LA SALIDA ES EL NUMERO QUE CORRESPONDE AL NUMERO DE CAMARAS EN CADA UNA DE LAS CLAVES

# print(sensors) #IMPRIME EL CONTENIDO QUE TIENE GUARDADO LA VARIABLE SENSORS
# print(num_cameras) #IMPRIME EL CONTENIDO QUE TIENE GUARDADO LA VARIABLE NUM_CAMERAS
# translations = {"mountain": "orod", "bread": "bass", "friend": "mellon", "horse": "roch" } #LA VARIABLE ES TRANSLATIONS, EN ESTE SE ENCUENTRA LA TRADUCCION DE CADA UNA DE LAS CLAVES ASOCIADAS 
# print(translations) #TRANSLATIONS EL CONTENIDO QUE TIENE GUARDADO LA VARIABLE NUM_CAMERAS

##Verifiying an error:
# powers = {[1, 2, 4, 8, 16]: 2, [1, 3, 9, 27, 81]: 3} #SE BUSCA CREAR UN DICCIONARIO LLAMADO POWERS, INTENTANDO RELACIONAR LISTAS DE NUMEROS CON UN EXPONENTE EN ESTE CASO A LA BASE 2 Y 3
# # print(powers) #IMPRIME EL CONTENIDO QUE TIENE GUARDADO LA VARIABLE POWERS

# children = {"von Trapp": ["Johannes", "Rosmarie", "Eleonore"] , "Corleone": ["Sonny", "Fredo", "Michael"]} #VARIABLE CHILDRENS, EN DONDE LA CLAVE ES EL APELLIDO DE CADA FAMILIA Y LA LISTA CORRESPONDE A LOS INTEGRANTES DE CADA FAMILIA CON EL MISMO APELIDO
# print(children) #IMPRIME EL CONTENIDO QUE TIENE GUARDADO LA VARIABLE CHILDREN

# my_empty_dictionary = {}  #CREA UN DICCIONARIO VACIO Y LO GUARDA EN LA VARIABLE MY_EMPTY_DICTIONARY
# print(my_empty_dictionary) #IMPRIME EL CONTENIDO QUE TIENE GUARDADO LA VARIABLE MY_EMPTY_DICTIONARY

# menu = {"oatmeal": 3, "avocado toast": 6, "carrot juice": 5, "blueberry muffin": 2} # CREA UN DICCIONARIO EN DONDE CONTIENE LAS CLAVES QUE SON PALABRAS QUE CONFORMAN UN MENU, EL NUMERO ASOCIADO CORRESPONDE A LA SALIDA (PRECIO)
# print("Before: ", menu) #IMPRIME EL CONTENIDO QUE TIENE GUARDADO LA VARIABLE MENU

# menu["cheesecake"] = 8 #LE ASIGNA AL DICCIONARIO MENU UNA NUEVA CLAVE CON SU RESPECTIVA SALIDA
# print("After", menu) #IMPRIME EL CONTENIDO QUE TIENE GUARDADO LA VARIABLE MENU
# animals_in_zoo = {"dinosaurs": 0} #CREA UN NUEVO DICCIONARIO LLAMADO ANIMALS_IN_ZOO CON UNA UNICA CLAVE CON SU RESPECTIVA SALIDA
# animals_in_zoo = {"dinosaurs": 0}
# animals_in_zoo = {"horses": 2} #AGREGA AL DICCIONARIO ANIMALS_IN_ZOO LA CALVE HORSES CON SU RESPECTIVA SALIDA
# print(animals_in_zoo) #IMPRIME EL CONTENIDO QUE TIENE GUARDADO EL DICCIONARIO ANIMALS_IN_ZOO



##Add multiple keys #SE VAN A AGREGAR MULTIPLES CLAVES
# sensors = {"living room": 21, "kitchen": 23, "bedroom": 20} #CREA UN NUEVO DICCIONARIO 
# print("Before", sensors) #IMPRIMIRA EL DICCIONARIO SENSOR INDICANDO, BEFORE: LO QUE TIENE ASIGNADO EL DICCIONARIO

# #If we wanted to add 3 new rooms, we could use: # SI SE QUISIERAN AGREGAR TRES NUEVAS HABITACIONES SE USARIA:
# sensors.update({"pantry": 22, "guest room": 25, "patio": 34}) #AGREGA NUEVAS CLAVES AL DICCIONARIO SENSORS
# print("After", sensors) #IMPRIME LO ALMACENADO EN EL DICCIONARIO SENSOR, PERO CON LA PALABRA AFTER ANTES DEL CONTENIDO DEL DICCIONARIO

###
# user_ids = {"teraCoder": 9018293, "proProgrammer": 119238} #CREA UN NUEVO DICCIONARIO LLAMADO USER_IDS
# print(user_ids) #IMPRIME LO ALMACENADO EN EL DICCIONARIO USER_IDS
# user_ids.update({"theLooper": 138475, "stringQueen": 85739}) #LE AGREGA NUEVAS CLAVES AL DICCIONARIO USER_IDS 
# print(user_ids) #IMPRIME NUEVAMENTE EL DICCIONARIO USER_IDS CON LAS NUEVAS MODIFICACIONES

## Overwrite Values ## #COMO SOBRE ESCRIBIR  EL VALOR DE UNA CLAVE EXISTENTE
#We know that we can add a key by using the following syntax: #SE PUEDE AGREGAR UNA CLAVE CON LA SIGUIENTE SINTAXIS
#menu["banana"] = 3 #AGREGA LA CLAVE "BANANA" AL DICCIONARIO MENU
# menu = {"oatmeal": 3, "avocado toast": 6, "carrot juice": 5, "blueberry muffin": 2} #CREA UN NUEVO DICCIONARIO LLAMADO MENU CON 4 CLAVES Y SUS RESPECTIVOS VALORES (CORCHETES MODIFICAR EL YA EXISTENTE, LLAVES CREA UN NUEVO DICCIONARIO)
# print("Before: ", menu) #IMPRIME NUEVAMENTE EL DICCIONARIO MENU, PERO CON LA PALABRA BEFORE ANTES DEL CONTENIDO
# menu["oatmeal"] = 5 # MODIFICA LA SALIDA DE LA CLAVE OATMEAL DEL DICCIONARIO MENU
# print("After", menu) #IMPRIME NUEVAMENTE EL DICCIONARIO MENU, PERO CON LA PALABRA AFTER ANTES DEL CONTENIDO

## Notice the value of "oatmeal" has now changed to 5. # INDICA QUE EL VALOR DE OTMEAL YA NO ES 3 SINO QUE ES 5
# oscar_winners = {"Best Picture": "La La Land", "Best Actor": "Casey Affleck", "Best Actress": "Emma Stone", "Animated Feature": "Zootopia"} #CREA UN NUEVO DICCIONARIO LLAMADO OSCAR_WINNERS
# print("Before", oscar_winners) #IMPRIME EL NUEVO DICCIONARIO (OSACR_WINNERS) CON LA PALABRA BEFORE ANTES DE SU CONTENIDO
# print() #IMPRIMIR UNA LINEA VACIA
# oscar_winners.update({"Supporting Actress": "Viola Davis"}) #MODIFICA O AGREGRA UNAS NUEVAS CLAVES SON SU RESPECTIVO VALOR
# print("After1", oscar_winners) # IMPRIME EL DICCIONARIO OSCAR_WINNERS CON LA PALABRA AFTER1 ANTES DEL CONTENIDO DEL DICCIONARIO
# print() #IMPRIME UNA LINEA VACIA
# oscar_winners["Best Picture"] = "Moonlight" # ACCEDE A LA CLAVE DEL DICCIONARIO Y ARROJA EL VALOR ASOCIADO
# print("After2", oscar_winners) # IMPRIME EL DICCIONARIO OSCAR_WINNERS CON LA PALABRA AFTER2 ANTES DEL CONTENIDO DEL DICCIONARIO


###Dict Comprehensions #COMPRENSIONES DE DICCIONARIO 
#Letâ€™s say we have two lists that we want to combine into a 
#dictionary, like a list of students and a list of their heights, 
#in inches: TENIENDO DOS LISTAS SE QUIEREN COMBINAR EN UN SOLO DICCIONARIO, COMO POR EJEMPLO UNA LISTA DE ESTUDIANTES Y UNA DE SUS ALTURAS (EN PULGADAS)

names = ['Jenny', 'Alexus', 'Sam', 'Grace'] #LISTA DE NOMBRES DE LOS ESTUDIANTES
heights = [61, 70, 67, 64] #LISTA DE ALTURA DE CADA ESTUDIANTE EN PULGADAS

#Python allows you to create a dictionary using 
# a dict comprehension, with this syntax: #EN PYTHON SE PUEDE CREAR UN DICCIONARIO UTILIZANDO UNA COMPRENSION DE DICCIONARIA HACIENDO USO DE LA SIGUIENTE SINTAXIS

# zipStudents = zip(names, heights) #ZIPSTUDENTS ES LA VARIABLE, ZIP PARA COMBINAR LOS OBJETOS DE LAS LISTAS NAMES Y HEIGHTS
# print("zipStudents: ", zipStudents) #IMPIRME EL CONTENIDO DE LA VARIABLE ZIPSTUDENTS

# students = {key:value for key, value in zip(names, heights)} #COMBINA LAS DOS LISTAS ELEMENTO POR ELEMENTO DONDE LA CLAVE ES NAMES Y LA SALIDA HEIGHTS, GUARDA EL DICCIONARIO RESULTANTE EN LA VARIABLE STUDENTS
# #students is now {'Jenny': 61, 'Alexus': 70, 'Sam': 67, 'Grace': 64} # COMO QUEDA EL DICCIONARIO STUDENTS (EJEMPLO)
# print(students) #IMPRIME EL DICCIONARIO STUDENTS

# #zip() combines two lists into an iterator of tuples with the list elements paired together. This dict comprehension: # ZIP() COMBINA DOS LISTAS EN UN INTERADOR (OBJETO QUE PRODUCE VALORES UNO A LA VEZ Y MANTIENE LA SECUENCIA DE DATOS) DE TUPLAS (COLECCION ORDENADA E INMUTABLE DE DATOS) CON LOS ELEMENTOS DE ISTA EMPAREJADOS

# drinks = ["espresso", "chai", "decaf", "drip"] #LISTA LLAMADA DRINKS
# caffeine = [64, 40, 0, 120] #LISTA LLAMADA CAFFEINE

# zipped_drinks = zip(drinks, caffeine) # EN ESTA LINEA CON ZIP() LO QUE SE ESTA HACEINDO ES COMBINAR LAS DOS LISTAS, EN DONDE CADA PAR ES UNA TUPLA
# print(zipped_drinks) #IMPRIME LOS VALORES EMPAREJADOS (NO ES UN DICCIONARIO)

# drinks_to_caffeine = {key:value for key, value in zipped_drinks} #CREA UN DICCIONARIO CON LOS DATOS EMPAREJADOS DONDE LA CLAVE ES LA BEBIDA Y LA SALIDA ES LA CAFEINA
# print(drinks_to_caffeine) #IMPRIME EL NUEVO DICCIONARIO CREADO

songs = ["Like a Rolling Stone", "Satisfaction", "Imagine", "What's Going On", "Respect", "Good Vibrations"] #LISTA LLAMADA SONGS
playcounts = [78, 29, 44, 21, 89, 5] #LISTA LLAMADA PLAYCOUNTS
plays = {key:value for key, value in zip(songs, playcounts)} #SE CREA UN DICCIOANRIO CON LOS DATOS EMPAREJADOS (TUPLA) SIENDO EL CONTENIDO DE SONGS LAS CLAVES Y EL DE PLAYCOUNTS LAS SALIDAS
print(plays) #IMPRIME EL DICCIONARIO PLAYS
plays.update({"Purple Haze": 1}) #AGREGA UNA NUEVA CLAVE AL DICCIONARIO (PURPLE HAZE) JUNTO CON LA RESPECTIVA SALIDA (1)
plays.update({"Respect": 94}) #MODIFICA LA CLAVE EXISTENTE DEL DICCIONARIO, CAMBIANDO SU SALIDA (94)
print("After: ", plays) #IMPRIME EL DICCIONARIO PLAYS DE NUEVO PERO AHORA CON LA PALBRA AFTER ANTES DE REFLEJAR CADA UNO DE LOS VALORES CONTENIDOS EN EL DICCIONARIO
library = {"The Best Songs": plays, "Sunday Feelings": {}} #CREA UN DICCIONARIO LLAMADO LIBRARY, EN ESTE SE LLAMA AL DICCIONARIO PLAYS, EN DONDE LA CLAVE ES "BEST SONGS" MIENTRAS QUE LA SALIDA ES LO CONTENIDO EN EL DICCIONARIO "PLAYS"; LA OTRA CLAVE ES "SUNDAY FEELINGS" PERO SU SALIDA ES VACIA
print(library) #IMPRIME EL CONTENIDO DE LA VARIABLE LIBRARY